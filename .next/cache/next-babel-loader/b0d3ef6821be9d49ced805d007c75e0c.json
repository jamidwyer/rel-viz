{"ast":null,"code":"var _jsxFileName = \"/var/www/html/rel-viz/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { ForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force';\nimport fetch from 'isomorphic-unfetch';\n\nconst PersonLink = props => __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/person/[name]\",\n  as: `/person/${props.name}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, props.name)));\n\nconst Index = props => {\n  console.log(props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(ForceGraph, {\n    simulationOptions: {\n      height: 300,\n      width: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.shows.map(person => __jsx(ForceGraphNode, {\n    node: {\n      id: person.id,\n      name: person.name\n    },\n    fill: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))), props.shows.map(person => {\n    person.links.map(link => __jsx(ForceGraphLink, {\n      link: {\n        source: person.name,\n        target: link\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }), __jsx(ForceGraphLink, {\n    link: {\n      source: 'first-node',\n      target: 'second-node'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(PersonLink, {\n    name: \"Lev Parnas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(PersonLink, {\n    name: \"Donald Trump\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(PersonLink, {\n    name: \"Jared Kushner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.shows.map(person => __jsx(\"li\", {\n    key: person.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/person/[name]\",\n    as: `/person/${person.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, person.name))))));\n};\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  console.log(data.map(entry => entry.show));\n  return {\n    props: [],\n    shows: data.map(entry => entry.show),\n    renderTree: true\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/var/www/html/rel-viz/pages/index.js"],"names":["React","Link","ForceGraph","ForceGraphNode","ForceGraphLink","fetch","PersonLink","props","name","Index","console","log","height","width","shows","map","person","id","links","link","source","target","getInitialProps","res","data","json","length","entry","show","renderTree"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport {ForceGraph, ForceGraphNode, ForceGraphLink} from 'react-vis-force';\nimport fetch from 'isomorphic-unfetch';\n\nconst PersonLink = props => (\n  <li>\n    <Link href=\"/person/[name]\" as={`/person/${props.name}`}>\n      <a>{props.name}</a>\n    </Link>\n  </li>\n);\n\nconst Index = props => {\nconsole.log(props);\n  return (\n    <div>\n      <ForceGraph simulationOptions={{ height: 300, width: 300 }}>\n        {props.shows.map(person => (\n          <ForceGraphNode node={{ id: person.id, name: person.name }} fill=\"red\" />\n        ))}\n      </ForceGraph>\n      {props.shows.map(person => {\n        person.links.map(link => \n          (\n            <ForceGraphLink link={{ source: person.name, target: link }} />\n          )\n          )\n      }\n      )}\n      <ForceGraphLink link={{ source: 'first-node', target: 'second-node' }} />\n      <ul>\n        <PersonLink name=\"Lev Parnas\" />\n        <PersonLink name=\"Donald Trump\" />\n        <PersonLink name=\"Jared Kushner\" />\n      </ul>\n      <ul>\n      {props.shows.map(person => (\n        <li key={person.id}>\n          <Link href=\"/person/[name]\" as={`/person/${person.name}`}>\n            <a>{person.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n</div>\n)};\n  \nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  console.log(data.map(entry => entry.show));\n\n  return {\n    props: [],\n    shows: data.map(entry => entry.show),\n    renderTree: true,\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}