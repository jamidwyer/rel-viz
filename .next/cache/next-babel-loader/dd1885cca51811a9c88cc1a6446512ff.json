{"ast":null,"code":"var _jsxFileName = \"/var/www/html/rel-viz/components/force.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { scaleLinear } from 'd3-scale'; //import preData from '../data/people.json';\n\nimport preData from 'dsv?delimiter=\\t!../data/bar.tsv';\nconst width = 960;\nconst height = 500; // coerce value to number\n\nconsole.log(preData);\nconst data = preData.map(({\n  name,\n  value\n}) => ({\n  name,\n  value: +value\n}));\nconst maxDatum = Math.max(...data.map(datum => datum.value));\nconst y = scaleLinear().domain([0, maxDatum]).range([height, 0]);\nconst barWidth = width / data.length;\nexport default function BarChart() {\n  const bars = data.map(({\n    name,\n    value\n  }, i) => __jsx(\"g\", {\n    transform: `translate(${i * barWidth}, 0)`,\n    key: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"rect\", {\n    y: y(value),\n    height: height - y(value),\n    width: barWidth - 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(\"text\", {\n    x: barWidth / 2,\n    y: y(value) + 3,\n    dy: \".75em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, value)));\n  return __jsx(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, bars);\n}","map":{"version":3,"sources":["/var/www/html/rel-viz/components/force.js"],"names":["React","scaleLinear","preData","width","height","console","log","data","map","name","value","maxDatum","Math","max","datum","y","domain","range","barWidth","length","BarChart","bars","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,UAA1B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf,C,CAEA;;AACAC,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,MAAMK,IAAI,GAAGL,OAAO,CAACM,GAAR,CAAY,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,MAAoB;AAACD,EAAAA,IAAD;AAAOC,EAAAA,KAAK,EAAE,CAACA;AAAf,CAApB,CAAZ,CAAb;AAEA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGN,IAAI,CAACC,GAAL,CAASM,KAAK,IAAIA,KAAK,CAACJ,KAAxB,CAAZ,CAAjB;AAEA,MAAMK,CAAC,GAAGd,WAAW,GAClBe,MADO,CACA,CAAC,CAAD,EAAIL,QAAJ,CADA,EAEPM,KAFO,CAED,CAACb,MAAD,EAAS,CAAT,CAFC,CAAV;AAIA,MAAMc,QAAQ,GAAGf,KAAK,GAAGI,IAAI,CAACY,MAA9B;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,IAAI,GAAGd,IAAI,CAACC,GAAL,CAAS,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,EAAgBY,CAAhB,KACpB;AAAG,IAAA,SAAS,EAAG,aAAYA,CAAC,GAAGJ,QAAS,MAAxC;AAA+C,IAAA,GAAG,EAAET,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,CAAC,EAAEM,CAAC,CAACL,KAAD,CAAV;AAAmB,IAAA,MAAM,EAAEN,MAAM,GAAGW,CAAC,CAACL,KAAD,CAArC;AAA8C,IAAA,KAAK,EAAEQ,QAAQ,GAAG,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,CAAC,EAAEA,QAAQ,GAAG,CAApB;AAAuB,IAAA,CAAC,EAAEH,CAAC,CAACL,KAAD,CAAD,GAAW,CAArC;AAAwC,IAAA,EAAE,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CAFF,CADW,CAAb;AASA,SACE;AAAK,IAAA,KAAK,EAAEP,KAAZ;AAAmB,IAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,IADH,CADF;AAKD","sourcesContent":["import React from 'react';\nimport {scaleLinear} from 'd3-scale';\n//import preData from '../data/people.json';\nimport preData from 'dsv?delimiter=\\t!../data/bar.tsv';\n\nconst width = 960;\nconst height = 500;\n\n// coerce value to number\nconsole.log(preData);\nconst data = preData.map(({name, value}) => ({name, value: +value}));\n\nconst maxDatum = Math.max(...data.map(datum => datum.value));\n\nconst y = scaleLinear()\n  .domain([0, maxDatum])\n  .range([height, 0]);\n\nconst barWidth = width / data.length;\n\nexport default function BarChart() {\n  const bars = data.map(({name, value}, i) => (\n    <g transform={`translate(${i * barWidth}, 0)`} key={name}>\n      <rect y={y(value)} height={height - y(value)} width={barWidth - 1} />\n      <text x={barWidth / 2} y={y(value) + 3} dy=\".75em\">\n        {value}\n      </text>\n    </g>\n  ));\n\n  return (\n    <svg width={width} height={height}>\n      {bars}\n    </svg>\n  );\n}"]},"metadata":{},"sourceType":"module"}